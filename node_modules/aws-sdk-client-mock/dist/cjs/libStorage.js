"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mockLibStorageUpload = void 0;
const client_s3_1 = require("@aws-sdk/client-s3");
const mockClient_1 = require("./mockClient");
/**
 * Configures required command mocks of the S3Client mock to support Lib Storage Upload helper
 * for multipart file upload.
 *
 * If S3Client mocks is not provided, a new one is created.
 * @param s3Mock S3Client mock created with {@link mockClient} function
 */
const mockLibStorageUpload = (s3Mock) => {
    if (!s3Mock) {
        s3Mock = (0, mockClient_1.mockClient)(client_s3_1.S3Client);
    }
    s3Mock.on(client_s3_1.CreateMultipartUploadCommand).resolves({ UploadId: '1' });
    s3Mock.on(client_s3_1.UploadPartCommand).resolves({ ETag: '1' });
    return s3Mock;
};
exports.mockLibStorageUpload = mockLibStorageUpload;
//# sourceMappingURL=libStorage.js.map